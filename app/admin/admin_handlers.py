import logging

from aiogram import F, Router
from aiogram.types import Message, CallbackQuery

from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext

import app.database.requests as rq
import app.admin.admin_keyboards as kb

admin_router = Router()

class Edit_Lesson(StatesGroup):
    count = State()
    time = State()
    name = State()
    classroom = State()
    teacher = State()

class Edit_call(StatesGroup):
    first_lesson = State()
    second_lesson = State()
    third_lesson = State()
    fourth_lesson = State()
    fifth_lesson = State()
    sixth_lesson = State()


async def start_admin(message: Message):
    user = message.from_user
    logging.info(f"Moderator: @{(user.first_name).lower()} logged in")

    await message.answer("""üíª <a href = 'https://t.me/helperforgroup201is_bot'>–°—Ç—É–¥–µ–Ω—á–∏—Å–∫–∏–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</a>.
–£–∑–Ω–∞–≤–∞–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∑–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è.""", 
                                    reply_markup=kb.main_menu_admin, 
                                    parse_mode="HTML")
    
# –î–∞–ª–µ–µ –≥–ª–∞–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

@admin_router.callback_query(F.data.in_(["admin_panel", "back_main_menu_panel"]))
async def admin_panel(call: CallbackQuery):
    await call.message.edit_text("üõ† –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ.", reply_markup=kb.main_menu_panel)

    @admin_router.callback_query(F.data.in_(["update_schlude", "back_update_schlude"]))
    async def update_schlude(call: CallbackQuery):
        await call.message.edit_text("–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–Ω–∏—è", reply_markup=kb.schlude_type)

        @admin_router.callback_query(F.data.in_(["update_lessons", "back_update_lessons"]))
        async def update_lessons(call: CallbackQuery):
            await call.message.edit_text("–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏", reply_markup=kb.week_type)

            global type_week; global type_day

            @admin_router.callback_query(F.data.in_(["update_even_week", "back_update_lessons"]))
            async def update_even_week(call: CallbackQuery):
                global type_week; type_week = "–ß–µ—Ç–Ω–∞—è"

                await call.message.edit_text("–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏", reply_markup=kb.day_type)

                @admin_router.callback_query(F.data.in_(["update_monday"]))
                async def update_monday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_tuesday"]))
                async def update_tuesday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–í—Ç–æ—Ä–Ω–∏–∫"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_wendnesday"]))
                async def update_wendnesday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–°—Ä–µ–¥–∞"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_thursday"]))
                async def update_thursday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–ß–µ—Ç–≤–µ—Ä–≥"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_friday"]))
                async def update_friday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–ü—è—Ç–Ω–∏—Ü–∞"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_saturday"]))
                async def update_saturday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–°—É–±–±–æ—Ç–∞"

                    await update_lesson(call, state)

            @admin_router.callback_query(F.data.in_(["update_odd_week", "back_update_lessons_odd"]))
            async def update_odd_week(call: CallbackQuery):
                global type_week; type_week = "–ù–µ—á–µ—Ç–Ω–∞—è"

                await call.message.edit_text("–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏.", reply_markup=kb.day_type_odd)

                @admin_router.callback_query(F.data.in_(["update_monday_odd"]))
                async def update_monday_odd(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_tuesday_odd"]))
                async def update_tuesday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–í—Ç–æ—Ä–Ω–∏–∫"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_wendnesday_odd"]))
                async def update_wendnesday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–°—Ä–µ–¥–∞"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_thursday_odd"]))
                async def update_thursday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–ß–µ—Ç–≤–µ—Ä–≥"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_friday_odd"]))
                async def update_friday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–ü—è—Ç–Ω–∏—Ü–∞"

                    await update_lesson(call, state)

                @admin_router.callback_query(F.data.in_(["update_saturday_odd"]))
                async def update_saturday(call: CallbackQuery, state: FSMContext):
                    global type_day; type_day = "–°—É–±–±–æ—Ç–∞"

                    await update_lesson(call, state)

        @admin_router.callback_query(F.data.in_(["update_calls"]))
        async def calls(call: CallbackQuery, state: FSMContext):
            await state.set_state(Edit_call.first_lesson)
            await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è.")

            @admin_router.message(Edit_call.first_lesson)
            async def first_lesson(message: Message, state: FSMContext):
                await state.update_data(first_lesson=message.text)
                await state.set_state(Edit_call.second_lesson)
                await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è.")

            @admin_router.message(Edit_call.second_lesson)
            async def second_lesson(message: Message, state: FSMContext):
                await state.update_data(second_lesson=message.text)
                await state.set_state(Edit_call.third_lesson)
                await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è —Ç—Ä–µ—Ç—å–µ–≥–æ –∑–∞–Ω—è—Ç–∏—è.")

            @admin_router.message(Edit_call.third_lesson)
            async def fourth_lesson(message: Message, state: FSMContext):
                await state.update_data(third_lesson=message.text)
                await state.set_state(Edit_call.fourth_lesson)
                await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è —á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è.")

            @admin_router.message(Edit_call.fourth_lesson)
            async def fourth_lesson(message: Message, state: FSMContext):
                await state.update_data(fourth_lesson=message.text)
                await state.set_state(Edit_call.fifth_lesson)
                await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –ø—è—Ç–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è")

            @admin_router.message(Edit_call.fifth_lesson)
            async def fifth_lesson(message: Message, state: FSMContext):
                await state.update_data(fifth_lesson=message.text)
                await state.set_state(Edit_call.sixth_lesson)
                await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è —à–µ—Å—Ç–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è")

            @admin_router.message(Edit_call.sixth_lesson)
            async def sixth_lesson(message: Message, state: FSMContext):
                await state.update_data(sixth_lesson=message.text)
                data = await state.get_data()
                await rq.update_calls(first_lesson=data["first_lesson"], second_lesson=data["second_lesson"], third_lesson=data["third_lesson"],
                    fourth_lesson=data["fourth_lesson"], fifth_lesson=data["fifth_lesson"], sixth_lesson=data["sixth_lesson"])
                await state.clear()

                await call.message.answer("–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–Ω–∏—è", reply_markup=kb.schlude_type)
                


# –î–∞–ª–µ–µ –≤–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é

@admin_router.callback_query(F.data == "back_main_menu_admin")
async def back_main_menu_admin(call: CallbackQuery):
    await call.message.edit_text("""üíª <a href = 'https://t.me/helperforgroup201is_bot'>–°—Ç—É–¥–µ–Ω—á–∏—Å–∫–∏–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</a>.
–£–∑–Ω–∞–≤–∞–π—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –∑–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ —Å–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è.""", 
                                    reply_markup=kb.main_menu_admin, 
                                    parse_mode="HTML")

async def update_lesson(call, state):
    await state.set_state(Edit_Lesson.count)
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–Ω—è—Ç–∏—è.")

    @admin_router.message(Edit_Lesson.count)
    async def time(message: Message, state: FSMContext):
        await state.update_data(count=message.text)
        await state.set_state(Edit_Lesson.time)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–Ω—è—Ç–∏—è.")

    @admin_router.message(Edit_Lesson.time)
    async def name(message: Message, state: FSMContext):
        await state.update_data(time=message.text)
        await state.set_state(Edit_Lesson.name)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.")

    @admin_router.message(Edit_Lesson.name)
    async def classroom(message: Message, state: FSMContext):
        await state.update_data(name=message.text)
        await state.set_state(Edit_Lesson.classroom)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–∞–±–∏–Ω–µ—Ç.")

    @admin_router.message(Edit_Lesson.classroom)
    async def teacher(message: Message, state: FSMContext):
        await state.update_data(classroom=message.text)
        await state.set_state(Edit_Lesson.teacher)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.")

    @admin_router.message(Edit_Lesson.teacher)
    async def teacher(message: Message, state: FSMContext):
        global type_week; global type_day

        await state.update_data(teacher=message.text)
        data = await state.get_data()
        await rq.update_lessons(type_week=type_week, type_day=type_day, count=data["count"], time=data["time"],
            name=data["name"], classroom=data["classroom"], teacher=data["teacher"])
        await state.clear()

        await call.message.answer("–í—ã–±–µ—Ä–∏ —Ç–∏–ø —Ä–∞—Å–ø–∏—Å–Ω–∏—è", reply_markup=kb.schlude_type)